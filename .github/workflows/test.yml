---
name: test
on:
  push:
    branches:
      - main
  pull_request:

env:
  GOLANGCI_LINT_VERSION: v1.53.2
  GO_VERSION: '1.21'

permissions: {}

jobs:
  typos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: crate-ci/typos@v1.16.18
        with:
          config: .typos.toml

  dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: make verify-dependencies

  api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/.cargo/registry
            ~/.cargo/git
            frontend/target
          key: ${{ runner.os }}-api-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/go.sum') }}
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true
      - run: sudo .github/github-actions-setup
      - run: make verify-api

  frontend-func:
    name: frontend / func
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            frontend/target
          key: ${{ runner.os }}-cargo-func-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo .github/github-actions-setup
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true
          target: wasm32-unknown-unknown
      - run: make build
        working-directory: frontend

  frontend-clippy:
    name: frontend / clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            frontend/target
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
          override: true
          components: clippy
      - run: sudo .github/github-actions-setup
      - run: cargo +nightly clippy --all-targets --all-features -- -D warnings
        working-directory: frontend

  frontend-rustfmt:
    name: frontend / rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true
      - run: cargo fmt && git diff --exit-code
        working-directory: frontend

  frontend-unit:
    name: frontend / unit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            frontend/target
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true
      - run: cargo test --no-fail-fast
        working-directory: frontend

  backend-func:
    name: backend / func
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo .github/github-actions-setup
      - run: make build
        working-directory: backend

  backend-lint:
    name: backend / lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-lint-${{ hashFiles('**/go.sum') }}
      - uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          working-directory: backend

  backend-unit:
    name: backend / unit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-unit-${{ hashFiles('**/go.sum') }}
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: |
          go test -v ./... -test.coverprofile=cov.out
          go tool cover -html cov.out -o cov.html
        working-directory: backend
      - uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: backend/cov.*

  backend-mocks:
    name: backend / mocks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-mocks-${{ hashFiles('**/go.sum') }}
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: go generate ./...
        working-directory: backend
      - run: .github/tree-status
